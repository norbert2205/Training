{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_form_2_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_6_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.firstName.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_11_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.lastName.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Phone Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_16_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.phoneNumber.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_22_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.username.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_em_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"(Leave blank to keep the same password)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_28_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_28_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, AddEditComponent_form_2_div_28_div_2_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.f.password.errors.minlength);\n  }\n}\nfunction AddEditComponent_form_2_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_2_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_form_2_div_33_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f.email.errors.required);\n  }\n}\nfunction AddEditComponent_form_2_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_form_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 3)(2, \"div\", 4)(3, \"label\", 5);\n    i0.ɵɵtext(4, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 6);\n    i0.ɵɵtemplate(6, AddEditComponent_form_2_div_6_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n    i0.ɵɵtext(9, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 8);\n    i0.ɵɵtemplate(11, AddEditComponent_form_2_div_11_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 5);\n    i0.ɵɵtext(14, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 9);\n    i0.ɵɵtemplate(16, AddEditComponent_form_2_div_16_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 3)(18, \"div\", 4)(19, \"label\", 5);\n    i0.ɵɵtext(20, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 10);\n    i0.ɵɵtemplate(22, AddEditComponent_form_2_div_22_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 5);\n    i0.ɵɵtext(25, \" Password \");\n    i0.ɵɵtemplate(26, AddEditComponent_form_2_em_26_Template, 2, 0, \"em\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"input\", 12);\n    i0.ɵɵtemplate(28, AddEditComponent_form_2_div_28_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 4)(30, \"label\", 5);\n    i0.ɵɵtext(31, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 13);\n    i0.ɵɵtemplate(33, AddEditComponent_form_2_div_33_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 14)(35, \"button\", 15);\n    i0.ɵɵtemplate(36, AddEditComponent_form_2_span_36_Template, 1, 0, \"span\", 16);\n    i0.ɵɵtext(37, \" Save \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"a\", 17);\n    i0.ɵɵtext(39, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx_r0.submitted && ctx_r0.f.firstName.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.firstName.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx_r0.submitted && ctx_r0.f.lastName.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.lastName.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx_r0.submitted && ctx_r0.f.phoneNumber.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.phoneNumber.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx_r0.submitted && ctx_r0.f.username.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.username.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx_r0.submitted && ctx_r0.f.password.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.password.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, ctx_r0.submitted && ctx_r0.f.email.errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.email.errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitting);\n  }\n}\nfunction AddEditComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddEditComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitting = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    // form with validation rules\n    this.form = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      username: ['', Validators.required],\n      // password only required in add mode\n      password: ['', [Validators.minLength(6), ...(!this.id ? [Validators.required] : [])]],\n      email: ['', Validators.required]\n    });\n    this.title = 'Add User';\n    if (this.id) {\n      // edit mode\n      this.title = 'Edit User';\n      this.loading = true;\n      this.accountService.getById(this.id).pipe(first()).subscribe(x => {\n        this.form.patchValue(x);\n        this.loading = false;\n      });\n    }\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitting = true;\n    this.saveUser().pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('User saved', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigateByUrl('/users');\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n  saveUser() {\n    // create or update user based on id param\n    return this.id ? this.accountService.update(this.id, this.form.value) : this.accountService.register(this.form.value);\n  }\n}\nAddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n  return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n};\nAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"text-center m-5\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"FirstName\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"LastName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"PhoneNumber\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"Username\", 1, \"form-control\", 3, \"ngClass\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"Password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"Email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/users\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"text-center\", \"m-5\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"]],\n  template: function AddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AddEditComponent_form_2_Template, 40, 28, \"form\", 0);\n      i0.ɵɵtemplate(3, AddEditComponent_div_3_Template, 2, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","first","i0","AddEditComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","id","snapshot","params","form","group","firstName","required","lastName","phoneNumber","username","password","minLength","email","title","loading","getById","pipe","subscribe","x","patchValue","f","controls","onSubmit","submitted","clear","invalid","submitting","saveUser","next","success","keepAfterRouteChange","navigateByUrl","error","update","value","register","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\DevProjects\\Training\\frontend\\src\\app\\users\\add-edit.component.ts","C:\\DevProjects\\Training\\frontend\\src\\app\\users\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form!: FormGroup;\r\n    id?: string;\r\n    title!: string;\r\n    loading = false;\r\n    submitting = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n\r\n        // form with validation rules\r\n        this.form = this.formBuilder.group({\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            phoneNumber: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            // password only required in add mode\r\n            password: ['', [Validators.minLength(6), ...(!this.id ? [Validators.required] : [])]],\r\n            email: ['', Validators.required]\r\n        });\r\n\r\n        this.title = 'Add User';\r\n        if (this.id) {\r\n            // edit mode\r\n            this.title = 'Edit User';\r\n            this.loading = true;\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => {\r\n                    this.form.patchValue(x);\r\n                    this.loading = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.submitting = true;\r\n        this.saveUser()\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('User saved', { keepAfterRouteChange: true });\r\n                    this.router.navigateByUrl('/users');\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.submitting = false;\r\n                }\r\n            })\r\n    }\r\n\r\n    private saveUser() {\r\n        // create or update user based on id param\r\n        return this.id\r\n            ? this.accountService.update(this.id!, this.form.value)\r\n            : this.accountService.register(this.form.value);\r\n    }\r\n}","<h1>{{title}}</h1>\r\n<form *ngIf=\"!loading\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"mb-3 col\">\r\n            <label class=\"form-label\">First Name</label>\r\n            <input type=\"text\" formControlName=\"FirstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 col\">\r\n            <label class=\"form-label\">Last Name</label>\r\n            <input type=\"text\" formControlName=\"LastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 col\">\r\n            <label class=\"form-label\">Phone Number</label>\r\n            <input type=\"text\" formControlName=\"PhoneNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phoneNumber.errors }\" />\r\n            <div *ngIf=\"submitted && f.phoneNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.phoneNumber.errors.required\">Phone Number is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"mb-3 col\">\r\n            <label class=\"form-label\">Username</label>\r\n            <input type=\"text\" formControlName=\"Username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 col\">\r\n            <label class=\"form-label\">\r\n                Password\r\n                <em *ngIf=\"id\">(Leave blank to keep the same password)</em>\r\n            </label>\r\n            <input type=\"password\" formControlName=\"Password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 col\">\r\n            <label class=\"form-label\">Email</label>\r\n            <input type=\"text\" formControlName=\"Email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <button [disabled]=\"submitting\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>\r\n<div *ngIf=\"loading\" class=\"text-center m-5\">\r\n    <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}